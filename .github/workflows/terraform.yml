name: Terraform Infra Apply/Destroy

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ───── STEP 1: Apply or Destroy VPC ─────
      - name: Init VPC
        run: cd Environment/Dev/VPC && terraform init

      - name: Plan VPC
        run: cd Environment/Dev/VPC && terraform plan

      - name: Apply or Destroy VPC
        run: |
          cd Environment/Dev/VPC
          if [[ "${{ github.head_ref }}" == "apply" ]]; then
            terraform apply -auto-approve
          elif [[ "${{ github.head_ref }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          fi

      # ───── STEP 2: Apply or Destroy EKS ─────
      - name: Init EKS
        run: cd Environment/Dev/EKS && terraform init

      - name: Plan EKS
        run: cd Environment/Dev/EKS && terraform plan

      - name: Apply or Destroy EKS
        run: |
          cd Environment/Dev/EKS
          if [[ "${{ github.head_ref }}" == "apply" ]]; then
            terraform apply -auto-approve
          elif [[ "${{ github.head_ref }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          fi
